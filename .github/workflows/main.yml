name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configura o JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # Cache Maven para acelerar o build
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Compila a aplicação (pom.xml está na pasta cadastro-backend)
      - name: Build with Maven (skip tests)
        working-directory: cadastro-backend
        run: mvn clean package -DskipTests

      # Executa os testes da aplicação
      - name: Run tests with Maven
        working-directory: cadastro-backend
        run: mvn test

      # Constrói a imagem Docker com o Dockerfile que está na pasta cadastro-backend
      - name: Build Docker image for Docker Hub
        run: |
          # Converte o nome de usuário para minúsculas para atender ao padrão do Docker Hub
          LOWER_USERNAME=$(echo "${{ secrets.DOCKERHUB_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          docker build -f cadastro-backend/Dockerfile -t ${LOWER_USERNAME}/cadastro-backend:latest cadastro-backend

      # Realiza o login no Docker Hub usando os secrets configurados
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Envia a imagem para o Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          LOWER_USERNAME=$(echo "${{ secrets.DOCKERHUB_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          docker push ${LOWER_USERNAME}/cadastro-backend:latest
